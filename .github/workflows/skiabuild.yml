name: Build Skia x-plat
on: [push]
jobs:
  build_wasm:
    runs-on: [self-hosted, linux, x64]
    container: jameswalmsley/skiabuild:wasm
    steps:
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Build Skia
        run: |
          make skia-wasm_defconfig
          make source-checkout -j$(nproc)
          make
         
      - run: echo "üçè This job's status is ${{ job.status }}."
      - uses: actions/upload-artifact@v3
        with:
          name: libskia-wasm
          path: out/skia/wasm/sysroot.tar.gz

  build_windows:
    runs-on: windows-2019
    steps:
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10' # Version range or exact version of a Python version to use, using SemVer's version range syntax

      - uses: ilammy/msvc-dev-cmd@v1
      - run: python -m pip install ninja meson
      - run: ninja --version
      - run: make skia-win_x64_defconfig
      - run: make source-checkout
      - run: make
      - run: Compress-Archive -Path out/skia/win_x64/sysroot/ skia-win64.zip
      - run: echo "üçè This job's status is ${{ job.status }}."
      - uses: actions/upload-artifact@v3
        with:
          name: libskia-win_x64
          path: skia-win64.zip

  build_x86_64-linux-gnu:
    runs-on: [self-hosted, linux, x64]
    container: jameswalmsley/skiabuild:x86_64-linux-gnu
    steps:
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Build Skia
        run: |
          make skia_defconfig
          make source-checkout -j$(nproc)
          DISTCC_HOSTS="${{ secrets.DISTCC_HOSTS }}" make

      - run: echo "üçè This job's status is ${{ job.status }}."
      - uses: actions/upload-artifact@v3
        with:
          name: libskia-x86_64-linux-gnu
          path: out/skia/x86_64-linux-gnu/sysroot.tar.gz

  test_skia_archlinux:
    runs-on: ubuntu-latest
    needs: build_x86_64-linux-gnu
    container: jameswalmsley/skiatest:archlinux
    steps:
      - uses: actions/download-artifact@v3
      - run: echo "Testing skia shim on archlinux"
      - name: Test skialib with avalonia.skia.testprog
        run: |
          mkdir out
          cd out && tar xf ../libskia-x86_64-linux-gnu/sysroot.tar.gz
          LD_LIBRARY_PATH=$(pwd)/usr/local/lib64 ./usr/local/bin/avalonia.skia.testprog
          LD_LIBRARY_PATH=$(pwd)/usr/local/lib64 ldd ./usr/local/bin/avalonia.skia.testprog
          md5sum *.png

      # - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      # - name: Check out repository code
      #   uses: actions/checkout@v2

      # - name: Test build skialib against pre-built package
      #   run: |
      #     mkdir build && cd build
      #     cmake -GNinja ../libavalonia.skia
      #     ninja
      #     lddtree ./avalonia.skia.testprog
      #     ./avalonia.skia.testprog
      #     md5sum *.png


  test_skia_debian:
    runs-on: ubuntu-latest
    needs: build_x86_64-linux-gnu
    container: jameswalmsley/skiatest:debian
    steps:
      - uses: actions/download-artifact@v3
      - run: echo "Testing skia shim on debian"
      - name: Test skialib with avalonia.skia.testprog
        run: |
          mkdir out
          cd out && tar xf ../libskia-x86_64-linux-gnu/sysroot.tar.gz
          LD_LIBRARY_PATH=$(pwd)/usr/local/lib64 ./usr/local/bin/avalonia.skia.testprog
          LD_LIBRARY_PATH=$(pwd)/usr/local/lib64 ldd ./usr/local/bin/avalonia.skia.testprog
          md5sum *.png

  # test_skia_fedora:
  #   runs-on: ubuntu-latest
  #   needs: build_x86_64-linux-gnu
  #   container: fedora:latest
  #   steps:
  #     - uses: actions/download-artifact@v3
  #     - run: echo "Testing skia shim on fedora"
  #     - name: Test skialib with testprog
  #       run: |
  #         mkdir out
  #         cd out && tar xvf ../libskia-x86_64-linux-gnu/sysroot.tar.gz
  #         LD_LIBRARY_PATH=$(pwd)/usr/local/lib64 ./usr/local/bin/avalonia.skia.testprog
  #         LD_LIBRARY_PATH=$(pwd)/usr/local/lib64 ldd ./usr/local/bin/avalonia.skia.testprog
  #         md5sum *.png

  # test_skia_alpine:
  #   runs-on: ubuntu-latest
  #   needs: build_x86_64-linux-gnu
  #   container: alpine:latest
  #   steps:
  #     - uses: actions/download-artifact@v3
  #     - run: echo "Testing skia shim on alpine linux"
  #     - name: Test skialib with testprog
  #       run: |
  #         mkdir out
  #         cd out && tar xvf ../libskia-x86_64-linux-gnu/sysroot.tar.gz
  #         LD_LIBRARY_PATH=$(pwd)/usr/local/lib64 ./usr/local/bin/avalonia.skia.testprog
  #         LD_LIBRARY_PATH=$(pwd)/usr/local/lib64 ldd ./usr/local/bin/avalonia.skia.testprog
  #         md5sum *.png

  release_libskia:
    needs: [build_x86_64-linux-gnu, build_windows, build_wasm, test_skia_archlinux, test_skia_debian]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        if: startsWith(github.ref, 'refs/tags/v')

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

      - run: ls -R
        if: startsWith(github.ref, 'refs/tags/v')

      - run: mv libskia-x86_64-linux-gnu/sysroot.tar.gz avalonia.skia-${{ steps.get_version.outputs.VERSION }}-linux-x86_64-linux-gnu-sysroot.tar.gz
        if: startsWith(github.ref, 'refs/tags/v')

      - run: mv libskia-wasm/sysroot.tar.gz avalonia.skia-${{ steps.get_version.outputs.VERSION }}-wasm-sysroot.tar.gz
        if: startsWith(github.ref, 'refs/tags/v')

      - run: mv libskia-win_x64/skia-win64.zip avalonia.skia-${{ steps.get_version.outputs.VERSION }}-win_x64-sysroot.zip
        if: startsWith(github.ref, 'refs/tags/v')

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          files: |
            avalonia.skia-*.zip
            avalonia.skia-*.tar.gz

