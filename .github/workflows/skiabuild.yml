name: Build Skia x-plat
on: [push]
jobs:
  build_skia_64:
    runs-on: [self-hosted, linux, x64]
    container: jameswalmsley/skiabuild:latest
    steps:
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Build Skia
        run: |
          make skia_defconfig
          make source-checkout -j$(nproc)
          make
          
      - run: echo "üçè This job's status is ${{ job.status }}."
      - uses: actions/upload-artifact@v3
        with:
          name: libskia-x86_64-linux-gnu
          path: out/skia/sysroot.tar.gz
      # - uses: actions/upload-artifact@v3
      #   with:
      #     name: libskia-x86-linux-gnu
      #     path: out/skia/sysroot.tar.gz


  test_skia_archlinux:
    runs-on: ubuntu-latest
    needs: build_skia_64
    container: jameswalmsley/skiatest:archlinux
    steps:
      - uses: actions/download-artifact@v3
      - run: echo "Testing skia shim on archlinux"
      - name: Test skialib with testprog
        run: |
          mkdir out
          cd out && tar xf ../libskia-x86_64-linux-gnu/sysroot.tar.gz
          LD_LIBRARY_PATH=$(pwd)/usr/local/lib64 ./usr/local/bin/testprog
          md5sum *.png

  test_skia_debian:
    runs-on: ubuntu-latest
    needs: build_skia_64
    container: jameswalmsley/skiatest:debian
    steps:
      - uses: actions/download-artifact@v3
      - run: echo "Testing skia shim on debian"
      - name: Test skialib with testprog
        run: |
          mkdir out
          cd out && tar xf ../libskia-x86_64-linux-gnu/sysroot.tar.gz
          LD_LIBRARY_PATH=$(pwd)/usr/local/lib64 ./usr/local/bin/testprog
          md5sum *.png

  # test_skia_fedora:
  #   runs-on: ubuntu-latest
  #   needs: build_skia_64
  #   container: fedora:latest
  #   steps:
  #     - uses: actions/download-artifact@v3
  #     - run: echo "Testing skia shim on fedora"
  #     - name: Test skialib with testprog
  #       run: |
  #         mkdir out
  #         cd out && tar xvf ../libskia-x86_64-linux-gnu/sysroot.tar.gz
  #         ls -la && pwd
  #         ls -la ./usr/local/bin
  #         LD_LIBRARY_PATH=$(pwd)/usr/local/lib64 ./usr/local/bin/testprog


  # test_skia_alpine:
  #   runs-on: ubuntu-latest
  #   needs: build_skia_64
  #   container: alpine:latest
  #   steps:
  #     - uses: actions/download-artifact@v3
  #     - run: echo "Testing skia shim on alpine linux"
  #     - name: Test skialib with testprog
  #       run: |
  #         mkdir out
  #         cd out && tar xvf ../libskia-x86_64-linux-gnu/sysroot.tar.gz
  #         ls -la && pwd
  #         ls -la ./usr/local/bin
  #         LD_LIBRARY_PATH=$(pwd)/usr/local/lib64 ./usr/local/bin/testprog


  release_libskia:
    needs: [build_skia_64]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        if: startsWith(github.ref, 'refs/tags/v')

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

      - run: ls -R
        if: startsWith(github.ref, 'refs/tags/v')

      - run: tar cvzf avalonia.skia-${{ steps.get_version.outputs.VERSION }}-sysroots.tar.gz *
        if: startsWith(github.ref, 'refs/tags/v')


      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          files: |
            avalonia.skia-${{ steps.get_version.outputs.VERSION }}-sysroots.tar.gz


